# this config needs haproxy-1.1.28 or haproxy-1.2.1

global
	log 127.0.0.1	local0
	log 127.0.0.1	local1 notice
	#log loghost	local0 info
	maxconn 4096
	#chroot /usr/share/haproxy
	user haproxy
	group haproxy
	daemon
    nbproc 2
    ca-base /etc/ssl
    crt-base /etc/ssl
	#debug
	#quiet

    log 127.0.0.1     local0 debug

defaults
	log	global
	maxconn	2000
	mode	http

    # from http://flux.neolao.com/post/45835870915/reverse-proxy-for-nodejs-in-production-with-apache2
    option abortonclose
    timeout client 5000
    option http-server-close
    no option accept-invalid-http-request
    no option accept-invalid-http-response
    option allbackups

    timeout client 25s
    timeout connect 5s
    timeout server 25s
    timeout tunnel 3600s
    timeout http-keep-alive 1s
    timeout http-request 15s
    timeout queue 30s
    timeout tarpit 60s
    default-server inter 3s rise 2 fall 3


    option forwardfor except 127.0.0.1 header X-Forwarded-For
    option redispatch
    retries 3
    option tcp-smart-connect
    maxconn 2000
    contimeout 5000
    clitimeout 5000
    srvtimeout 5000


	#option	httplog
	#option	dontlognull
	#retries	3
	#option redispatch
	#contimeout	5000
	#clitimeout	50000
	#srvtimeout	50000
    # add x-forwarede-for header

    # from https://www.exratione.com/2012/12/websockets-over-ssl-haproxy-nodejs-nginx/
#    option forwardfor
#    option http-server-close
#    timeout connect 5s
#    timeout client 30s
#    timeout server 30s
#    timeout tunnel 1h


frontend public
    bind :80
    redirect scheme https if !{ ssl_fc }
    bind :443 ssl crt snakeoil.pem
    use_backend nodejs_socket if { path_beg /socket.io }
    default_backend apache2

backend apache2
    mode http
    #reqrep ^([^\ :]*)\ (.*[^f]f[^a]o)$     \1\ /\2/bar
    #reqrep ^([^\ :]*)\ (.*cgi)\      \1\ /\2/
    #reqrep ^(.*cgi)     \1/
    #reqrep ^(.*)[^/]$    \1/
    #reqrep ^(.*)foo$    \1/login/
    #reqrep ^([^\ :]*)\ (.*[^/])     \1\ /\2/bar
    balance roundrobin
    option forwardfor
    #reqrep ^([^\ :]*)\ (.*foob)$     \1\ /\2/barb
    server apache2 127.0.0.1:8080 weight 1 maxconn 1024 check  
    timeout connect 5s
    timeout http-request 3s
    timeout server 25s


#backend node
#    mode http
#    timeout server 1h
#    timeout connect 1s
#    option httpclose
#    option forwardfor
#    server server1 127.0.0.1:3000 weight 1 maxconn 1024 check
#    reqadd X-Forwarded-Proto:\ https
#    balance leastconn

backend nodejs_socket
    mode http
    timeout server 86400000
    timeout connect 5000
    server io_test localhost:8000
    
#listen	ssl-relay 0.0.0.0:8443
#	option	ssl-hello-chk
#	balance	source
#	server	inst1 192.168.110.56:443 check inter 2000 fall 3
#	server	inst2 192.168.110.57:443 check inter 2000 fall 3
#	server	back1 192.168.120.58:443 backup

